var somethingChanged = false;

document.getElementById('new-article-button').style = "display: block";
document.getElementById('release-button').style = "display: block";

document.addEventListener('click', (event) => {
  event.composedPath().forEach(async (element) => {
    try {
      if (element.hasAttribute('editable') && !element.dataset.hasmd) {

        let markdown;

        if (element.getAttribute('editable') !== '') {
          const url = `/markdowns/${element.getAttribute('editable')}.md`;
          try {
            const response = await fetch(url);
            if (response.status === 200) {
              markdown = await response.text();
              markdown = markdown.split('\n---')[1];
            }
          } catch (error) {
            console.log(error);
          }
        }

        const editor = new toastui.Editor({
          el: element,
          height: Math.max(element.offsetHeight, 300) + 'px',
          initialEditType: 'markdown',
          previewStyle: 'tab',
          usageStatistics: false,
          initialValue: markdown,
          events: {
            change: function(event) {
              element.dataset.md = editor.getMarkdown()
              if (!somethingChanged) {
                somethingChanged = true;
                document.getElementById('preview-button').style.display = "block";
              }
            }
          }
        });

        element.dataset.hasmd = 'true';
      }
    } catch (error) {}
  });
});

function preview () {
  document.querySelectorAll('[editable]').forEach(element => {
    if (element.dataset.md && element.getAttribute('editable') !== '') {
      const xhr = new XMLHttpRequest();
      xhr.open("PUT", `/api/markdown/${element.getAttribute('editable').replace('/','_')}`, true);
      xhr.setRequestHeader('Content-Type', 'application/json');

      xhr.onload = function () {
        if (xhr.readyState == 4 && xhr.status == "200") {
          console.log('reloading');
          location.reload();
        } else {
          console.error(xhr);
        }
      }

      xhr.send(JSON.stringify({
          id: element.getAttribute('editable'),
          markdown: element.dataset.md
      }));
      showSpinnerOverlay();
    }
  });
}

function release () {
  const xhr = new XMLHttpRequest();
  xhr.open("GET", '/api/release/');
  xhr.onload = function () {
    if (xhr.readyState == 4 && xhr.status == "200") {
      console.log('release');
      hideSpinnerOverlay();
    } else {
      console.error(xhr);
    }
  }
  xhr.send();
  showSpinnerOverlay();
}

function creatArticle () {
  hideFormOverlay();

  let data = {};
  data.id = document.getElementById("form-id").value;
  data.title = document.getElementById("form-tittle").value;
  data.description = document.getElementById("form-description").value;
  data.author = document.getElementById("form-author").value;

  const xhr = new XMLHttpRequest();
  xhr.open("POST", "/api/markdown/", true);
  xhr.setRequestHeader('Content-Type', 'application/json; charset=UTF-8');
  xhr.onload = function () {
    if (xhr.status != 200) {
      console.log("SERVER ERROR");
    } else {
      if (xhr.readyState == 4 && xhr.status == "200") {
        console.log('reloading');
        location.reload();
      } else {
        console.log("FAILURE!");
      }
    }
  };
  xhr.send(JSON.stringify(data));
  showSpinnerOverlay();

  return false;
}

function showSpinnerOverlay () {
  document.getElementById('spinner-overlay').style.display = "flex";
}

function hideSpinnerOverlay () {
  document.getElementById('spinner-overlay').style.display = "none";
}

function showFormOverlay () {
  document.getElementById('form-overlay').style.display = "flex";
}

function hideFormOverlay () {
  document.getElementById('form-overlay').style.display = "none";
}